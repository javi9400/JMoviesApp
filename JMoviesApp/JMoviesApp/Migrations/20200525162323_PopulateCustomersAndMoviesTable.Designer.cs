// <auto-generated />
using JMoviesApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JMoviesApp.Migrations
{
    [DbContext(typeof(JMoviesAppContext))]
    [Migration("20200525162323_PopulateCustomersAndMoviesTable")]
    partial class PopulateCustomersAndMoviesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("JMoviesApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsSuscribedToNewsLetter")
                        .HasColumnType("boolean");

                    b.Property<byte>("MembershipTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("MembershipTypeId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSuscribedToNewsLetter = true,
                            MembershipTypeId = (byte)1,
                            Name = "Javier"
                        },
                        new
                        {
                            Id = 2,
                            IsSuscribedToNewsLetter = true,
                            MembershipTypeId = (byte)1,
                            Name = "Daniella"
                        },
                        new
                        {
                            Id = 3,
                            IsSuscribedToNewsLetter = false,
                            MembershipTypeId = (byte)2,
                            Name = "Carlos"
                        });
                });

            modelBuilder.Entity("JMoviesApp.Models.MembershipType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("smallint");

                    b.Property<byte>("DurationInMonths")
                        .HasColumnType("smallint");

                    b.Property<short>("SignUpFee")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            DiscountRate = (byte)0,
                            DurationInMonths = (byte)0,
                            SignUpFee = (short)0
                        },
                        new
                        {
                            Id = (byte)2,
                            DiscountRate = (byte)10,
                            DurationInMonths = (byte)1,
                            SignUpFee = (short)30
                        },
                        new
                        {
                            Id = (byte)3,
                            DiscountRate = (byte)15,
                            DurationInMonths = (byte)90,
                            SignUpFee = (short)3
                        },
                        new
                        {
                            Id = (byte)4,
                            DiscountRate = (byte)15,
                            DurationInMonths = (byte)12,
                            SignUpFee = (short)300
                        });
                });

            modelBuilder.Entity("JMoviesApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Star wars"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SpiderMan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "John Wick"
                        });
                });

            modelBuilder.Entity("JMoviesApp.Models.Customer", b =>
                {
                    b.HasOne("JMoviesApp.Models.MembershipType", "MembershipTypes")
                        .WithMany()
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
